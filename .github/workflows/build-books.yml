name: Build mdBooks

on:
  push:
    branches:
      - main
      - feat/landing-page
      - "**"
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: build-mdbook
    runs-on: ubuntu-latest
    strategy:
      matrix:
        path: ["srd/1.0/de"]
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v1
        with:
          mdbook-version: "latest"

      - name: Build mdBook
        run: |
          echo "Building book in ${{ matrix.path }}"
          cd "${{ matrix.path }}"
          mdbook build

      - name: Create public directory structure
        run: |
          # Extract version and language from matrix path (e.g., "srd/1.0/de")
          IFS='/' read -ra PATH_PARTS <<< "${{ matrix.path }}"
          VERSION="${PATH_PARTS[1]}"
          LANG="${PATH_PARTS[2]}"

          # Create the public directory structure
          mkdir -p "public/srd/$VERSION/$LANG"

          # Copy the built book to the public directory
          cp -r "${{ matrix.path }}/book/"* "public/srd/$VERSION/$LANG/"

          echo "Created public/srd/$VERSION/$LANG/ with built content"

      - name: Set artifact name
        id: set-artifact-name
        run: |
          ARTIFACT_NAME="mdbook-$(echo "${{ matrix.path }}" | tr '/' '-')"
          echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_ENV

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: public
          retention-days: 7

  deploy:
    name: deploy-to-pages
    needs: build
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    concurrency:
      group: "pages"
      cancel-in-progress: false
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: mdbook-*
          path: artifacts
          merge-multiple: false

      - name: Debug - Show artifacts structure
        run: |
          echo "=== Artifacts directory structure ==="
          tree artifacts || find artifacts -type f

      - name: Create public directory from artifacts
        run: |
          mkdir -p public

      - name: Merge artifacts into public directory
        run: |
          # Each artifact contains a 'public' directory with the proper structure
          # We need to merge all of them into the main public directory
          for artifact_dir in artifacts/*/; do
            if [ -d "$artifact_dir/public" ]; then
              echo "Merging $(basename "$artifact_dir") into public"
              cp -r "$artifact_dir/public/"* public/
            fi
          done

      - name: Generate landing page
        run: |
          echo "Running generate_landing_page.py script"
          python script/generate_landing_page.py

      - name: Debug - Show public structure and landing page content
        run: |
          echo "=== Public directory structure ==="
          tree public || find public -type f
          echo ""
          echo "=== Generated index.html content ==="
          if [ -f "script/index.html" ]; then
            cat script/index.html
          else
            echo "No index.html found in script directory"
          fi

      - name: Move landing page to public directory
        run: |
          if [ -f "script/index.html" ]; then
            echo "Moving generated index.html to public directory"
            cp script/index.html public/index.html
          else
            echo "No index.html found in script directory, creating basic one"
            # Create a basic index.html if none exists
            echo "<html><head><title>DH SRD Documentation</title></head><body><h1>DH SRD Documentation</h1><p>Select a book from the list:</p><ul>" > public/index.html
            for dir in public/*/; do
              if [ -d "$dir" ]; then
                dirname=$(basename "$dir")
                echo "<li><a href=\"$dirname\">$dirname</a></li>" >> public/index.html
              fi
            done
            echo "</ul></body></html>" >> public/index.html
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
